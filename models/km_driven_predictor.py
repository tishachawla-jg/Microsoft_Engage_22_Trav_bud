# -*- coding: utf-8 -*-
"""Km_driven_predictor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11l6yS7oJzaIovtiUEqol1xTrzdXhLwUM
"""

import numpy as np
import pandas as pd

car = pd.read_csv('/content/quikr_car - quikr_car.csv')

car.head(100)

car.shape

car.info()

car['Price'].unique()

car['kms_driven'].unique()

car['fuel_type'].unique()

"""# **CLEANING**"""

backup = car.copy()

car = car[car['year'].str.isnumeric()]

car['year'] = car['year'].astype(int)

type(car)

car =   car[car['Price'] != "Ask For Price"]

type(car)

car['Price'] = car['Price'].str.replace(',','').astype(int)

car.info()

car['kms_driven'] = car['kms_driven'].str.split(' ').str.get(0).str.replace(',', '')

car = car[car['kms_driven'].str.isnumeric()]

car['kms_driven'] = car['kms_driven'].astype(int)

car = car[~car['fuel_type'].isna()]

car['name'] = car['name'].str.split(' ').str.slice(0, 3).str.join(' ')

car = car.reset_index(drop = True)

car.describe()

car = car[car['Price'] < 6e6].reset_index(drop = True)

car

car.info()

car.to_csv('Cleaned Car.csv')

"""# **MODEL**"""

X = car.drop(columns = 'kms_driven')
y = car['kms_driven']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y,test_size = 0.3)

from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import make_column_transformer
from sklearn.pipeline import make_pipeline

ohe = OneHotEncoder()
ohe.fit(X[['name', 'company', 'fuel_type']])

column_trans = make_column_transformer((OneHotEncoder(categories = ohe.categories_), ['name', 'company', 'fuel_type']),
                                       remainder = 'passthrough')

lr = LinearRegression()

pipe = make_pipeline(column_trans, lr)

pipe.fit(X_train, y_train)

y_pred = pipe.predict(X_test)

r2_score(y_test, y_pred)

scores = []
for i in range(1000):
    X_train, X_test, y_train, y_test = train_test_split(X, y,test_size = 0.2, random_state = i)
    lr = LinearRegression()
    pipe = make_pipeline(column_trans, lr)
    pipe.fit(X_train, y_train)
    y_pred = pipe.predict(X_test)
    scores.append(r2_score(y_test, y_pred))

np.argmax(scores)

scores[np.argmax(scores)]

X_train, X_test, y_train, y_test = train_test_split(X, y,test_size = 0.2, random_state = np.argmax(scores))
lr = LinearRegression()
pipe = make_pipeline(column_trans, lr)
pipe.fit(X_train, y_train)
y_pred = pipe.predict(X_test)
r2_score(y_test, y_pred)

import pickle

pickle.dump(pipe, open('LinearRegression4.pkl', 'wb'))

pipe.predict(pd.DataFrame([['Ford EcoSport Titanium', 'Ford',800000 ,2012, 'Petrol']], columns = ['name', 'company', 'Price','year', 'fuel_type' ]))